/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProposalManager,
  ProposalManagerInterface,
} from "../../contracts/ProposalManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "totalVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastProposalTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "bytes32",
        name: "actionHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "votesFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesAgainst",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract TokenUF",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "support",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526206978060045534801561001757600080fd5b50604051610ecf380380610ecf8339810160408190526100369161005b565b600080546001600160a01b0319166001600160a01b039290921691909117905561008b565b60006020828403121561006d57600080fd5b81516001600160a01b038116811461008457600080fd5b9392505050565b610e358061009a6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063cbc0e75b11610066578063cbc0e75b14610118578063da35c6641461012d578063e2cdd42a14610136578063f91c248214610149578063fc0c546a1461016c57600080fd5b8063013cf08b146100a3578063055c99db146100d15780635b7ad578146100e85780639a0e7d6614610108578063c08cc02d14610110575b600080fd5b6100b66100b136600461092c565b610197565b6040516100c896959493929190610945565b60405180910390f35b6100da60045481565b6040519081526020016100c8565b6100da6100f63660046109db565b60036020526000908152604090205481565b6100da610257565b6002546100da565b61012b610126366004610a46565b6102aa565b005b6100da60025481565b61012b610144366004610ae0565b61041b565b61015c610157366004610b25565b610604565b60405190151581526020016100c8565b60005461017f906001600160a01b031681565b6040516001600160a01b0390911681526020016100c8565b6001602081905260009182526040909120805491810180546101b890610baf565b80601f01602080910402602001604051908101604052809291908181526020018280546101e490610baf565b80156102315780601f1061020657610100808354040283529160200191610231565b820191906000526020600020905b81548152906001019060200180831161021457829003601f168201915b505050506002830154600384015460048501546005909501549394919390925060ff1686565b6000805b6002548110156102a657600081815260016020526040902060038101546002909101546102889190610bff565b6102929083610bff565b91508061029e81610c18565b91505061025b565b5090565b4281116102f15760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420646561646c696e6560801b60448201526064015b60405180910390fd5b6004546001600160a01b0388166000908152600360205260409020546103179190610bff565b4210156103725760405162461bcd60e51b815260206004820152602360248201527f57616974206265666f7265206372656174696e672061206e65772070726f706f6044820152621cd85b60ea1b60648201526084016102e8565b600086868686868660405160200161038f96959493929190610c31565b60408051601f1981840301815291905280516020909101206002805491925060006103b983610c18565b909155505060025460009081526001602081905260409091208281559081016103e3858783610cdc565b50600481019290925550600501805460ff191690555050506001600160a01b0390921660009081526003602052604090204290555050565b6000838152600160205260409020600581015460ff161561047a5760405162461bcd60e51b8152602060048201526019602482015278141c9bdc1bdcd85b08185b1c9958591e48195e1958dd5d1959603a1b60448201526064016102e8565b806004015442106104cd5760405162461bcd60e51b815260206004820152601760248201527f566f74696e6720706572696f642068617320656e64656400000000000000000060448201526064016102e8565b6001600160a01b038316600090815260068201602052604090205460ff16156105285760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b60448201526064016102e8565b600080546040516370a0823160e01b81526001600160a01b038681166004830152909116906370a0823190602401602060405180830381865afa158015610573573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105979190610d9d565b905082156105be57808260020160008282546105b39190610bff565b909155506105d89050565b808260030160008282546105d29190610bff565b90915550505b506001600160a01b03909216600090815260069092016020525060409020805460ff1916600117905550565b6000868152600160205260408120600581015460ff16156106635760405162461bcd60e51b8152602060048201526019602482015278141c9bdc1bdcd85b08185b1c9958591e48195e1958dd5d1959603a1b60448201526064016102e8565b80600401544210156106b75760405162461bcd60e51b815260206004820152601b60248201527f566f74696e6720706572696f6420686173206e6f7420656e646564000000000060448201526064016102e8565b80600301548160020154116107065760405162461bcd60e51b815260206004820152601560248201527450726f706f73616c20646964206e6f74207061737360581b60448201526064016102e8565b600054604080516318160ddd60e01b815290516064926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190610d9d565b61077f90600a610db6565b6107899190610dcd565b8160030154826002015461079d9190610bff565b10156107de5760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f75676820766f74657360801b60448201526064016102e8565b805460048201546040516107fe918a91889188918c918c91602001610c31565b60405160208183030381529060405280519060200120146108615760405162461bcd60e51b815260206004820152601c60248201527f496e76616c696420657865637574696f6e20706172616d65746572730000000060448201526064016102e8565b6000876001600160a01b0316858560405161087d929190610def565b6000604051808303816000865af19150503d80600081146108ba576040519150601f19603f3d011682016040523d82523d6000602084013e6108bf565b606091505b50509050806109105760405162461bcd60e51b815260206004820152601960248201527f46756e6374696f6e20657865637574696f6e206661696c65640000000000000060448201526064016102e8565b6005909101805460ff1916600117905590509695505050505050565b60006020828403121561093e57600080fd5b5035919050565b8681526000602060c08184015287518060c085015260005b818110156109795789810183015185820160e00152820161095d565b50600060e0828601015260e0601f19601f830116850101925050508560408301528460608301528360808301526109b460a083018415159052565b979650505050505050565b80356001600160a01b03811681146109d657600080fd5b919050565b6000602082840312156109ed57600080fd5b6109f6826109bf565b9392505050565b60008083601f840112610a0f57600080fd5b50813567ffffffffffffffff811115610a2757600080fd5b602083019150836020828501011115610a3f57600080fd5b9250929050565b600080600080600080600060a0888a031215610a6157600080fd5b610a6a886109bf565b9650610a78602089016109bf565b9550604088013567ffffffffffffffff80821115610a9557600080fd5b610aa18b838c016109fd565b909750955060608a0135915080821115610aba57600080fd5b50610ac78a828b016109fd565b989b979a50959894979596608090950135949350505050565b600080600060608486031215610af557600080fd5b83359250610b05602085016109bf565b915060408401358015158114610b1a57600080fd5b809150509250925092565b60008060008060008060808789031215610b3e57600080fd5b86359550610b4e602088016109bf565b9450604087013567ffffffffffffffff80821115610b6b57600080fd5b610b778a838b016109fd565b90965094506060890135915080821115610b9057600080fd5b50610b9d89828a016109fd565b979a9699509497509295939492505050565b600181811c90821680610bc357607f821691505b602082108103610be357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c1257610c12610be9565b92915050565b600060018201610c2a57610c2a610be9565b5060010190565b6bffffffffffffffffffffffff198760601b1681528486601483013760008582016014810160008152858782375060149401938401929092525050603401949350505050565b634e487b7160e01b600052604160045260246000fd5b601f821115610cd757600081815260208120601f850160051c81016020861015610cb45750805b601f850160051c820191505b81811015610cd357828155600101610cc0565b5050505b505050565b67ffffffffffffffff831115610cf457610cf4610c77565b610d0883610d028354610baf565b83610c8d565b6000601f841160018114610d3c5760008515610d245750838201355b600019600387901b1c1916600186901b178355610d96565b600083815260209020601f19861690835b82811015610d6d5786850135825560209485019460019092019101610d4d565b5086821015610d8a5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b600060208284031215610daf57600080fd5b5051919050565b8082028115828204841417610c1257610c12610be9565b600082610dea57634e487b7160e01b600052601260045260246000fd5b500490565b818382376000910190815291905056fea2646970667358221220aee6ba58035aeb0a94aa7c983f527290b80138711b9408d972d93b27702dd47864736f6c63430008140033";

type ProposalManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProposalManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProposalManager__factory extends ContractFactory {
  constructor(...args: ProposalManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(tokenAddress, overrides || {});
  }
  override deploy(
    tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(tokenAddress, overrides || {}) as Promise<
      ProposalManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProposalManager__factory {
    return super.connect(runner) as ProposalManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProposalManagerInterface {
    return new Interface(_abi) as ProposalManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProposalManager {
    return new Contract(address, _abi, runner) as unknown as ProposalManager;
  }
}
