/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProposalManager,
  ProposalManagerInterface,
} from "../../contracts/ProposalManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "proposalHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "proposalHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "proposalHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "support",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votingPower",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "existingProposals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalHashes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "totalVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastProposalTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "bytes32",
        name: "actionHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "votesFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesAgainst",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract TokenUF",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "support",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526206978060055534801561001757600080fd5b5060405161120d38038061120d8339810160408190526100369161005b565b600080546001600160a01b0319166001600160a01b039290921691909117905561008b565b60006020828403121561006d57600080fd5b81516001600160a01b038116811461008457600080fd5b9392505050565b6111738061009a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063863ce2fc11610071578063863ce2fc146101375780639a0e7d661461014a578063bb971d6714610152578063cbc0e75b14610185578063d808cf6214610198578063fc0c546a146101ad57600080fd5b8063055c99db146100ae57806332ed5b12146100ca578063460c20d0146100ef5780635b7ad57814610104578063730ad45414610124575b600080fd5b6100b760055481565b6040519081526020015b60405180910390f35b6100dd6100d8366004610b14565b6101d8565b6040516100c196959493929190610b2d565b6101026100fd366004610c0c565b610298565b005b6100b7610112366004610c96565b60046020526000908152604090205481565b610102610132366004610cb8565b6105d6565b6100b7610145366004610b14565b6107d8565b6100b76107f9565b610175610160366004610b14565b60026020526000908152604090205460ff1681565b60405190151581526020016100c1565b610102610193366004610cfd565b610872565b6101a0610abc565b6040516100c19190610d97565b6000546101c0906001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b6001602081905260009182526040909120805491810180546101f990610ddb565b80601f016020809104026020016040519081016040528092919081815260200182805461022590610ddb565b80156102725780601f1061024757610100808354040283529160200191610272565b820191906000526020600020905b81548152906001019060200180831161025557829003601f168201915b505050506002830154600384015460048501546005909501549394919390925060ff1686565b6000868152600160205260409020600581015460ff16156102d45760405162461bcd60e51b81526004016102cb90610e15565b60405180910390fd5b600054604080516318160ddd60e01b815290516064926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610e48565b61034d90600a610e77565b6103579190610e94565b8160030154826002015461036b9190610eb6565b10156103ac5760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f75676820766f74657360801b60448201526064016102cb565b80600301548160020154116103fb5760405162461bcd60e51b815260206004820152601560248201527450726f706f73616c20646964206e6f74207061737360581b60448201526064016102cb565b806004015442101561044f5760405162461bcd60e51b815260206004820152601b60248201527f566f74696e6720706572696f6420686173206e6f7420656e646564000000000060448201526064016102cb565b8054600482015460405161046f918991879187918b918b91602001610ec9565b60405160208183030381529060405280519060200120146104d25760405162461bcd60e51b815260206004820152601c60248201527f496e76616c696420657865637574696f6e20706172616d65746572730000000060448201526064016102cb565b6000866001600160a01b031684846040516104ee929190610f0f565b6000604051808303816000865af19150503d806000811461052b576040519150601f19603f3d011682016040523d82523d6000602084013e610530565b606091505b505090508061057d5760405162461bcd60e51b8152602060048201526019602482015278119d5b98dd1a5bdb88195e1958dd5d1a5bdb8819985a5b1959603a1b60448201526064016102cb565b60058201805460ff191660011790556040517f95775ac0d9aa106cab8a34fc9d9c4c659e68021124d953c990d19c1140a0cea8906105c4908a908a908a908a908790610f48565b60405180910390a15050505050505050565b6000838152600160205260409020600581015460ff16156106095760405162461bcd60e51b81526004016102cb90610e15565b806004015442106106565760405162461bcd60e51b8152602060048201526017602482015276159bdd1a5b99c81c195c9a5bd9081a185cc8195b991959604a1b60448201526064016102cb565b6001600160a01b038316600090815260068201602052604090205460ff16156106b15760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b60448201526064016102cb565b600080546040516370a0823160e01b81526001600160a01b038681166004830152909116906370a0823190602401602060405180830381865afa1580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107209190610e48565b90508215610747578082600201600082825461073c9190610eb6565b909155506107619050565b8082600301600082825461075b9190610eb6565b90915550505b6001600160a01b0384166000818152600684016020908152604091829020805460ff1916600117905581518881529081019290925284151590820152606081018290527f9bc1d007e9f894b0900fab4b7e20029267e704c85851e5470c30a1e1b239e0909060800160405180910390a15050505050565b600381815481106107e857600080fd5b600091825260209091200154905081565b6000805b60035481101561086e5760006003828154811061081c5761081c610f87565b600091825260208083209091015480835260019091526040909120600381015460029091015491925061084e91610eb6565b6108589084610eb6565b925050808061086690610f9d565b9150506107fd565b5090565b4281116108b45760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420646561646c696e6560801b60448201526064016102cb565b6005546001600160a01b0388166000908152600460205260409020546108da9190610eb6565b4210156109355760405162461bcd60e51b815260206004820152602360248201527f57616974206265666f7265206372656174696e672061206e65772070726f706f6044820152621cd85b60ea1b60648201526084016102cb565b600086868686868660405160200161095296959493929190610ec9565b60408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff16156109c45760405162461bcd60e51b815260206004820152601760248201527650726f706f73616c20616c72656164792065786973747360481b60448201526064016102cb565b60008181526001602081905260409091208281559081016109e685878361101b565b50600480820184905560058201805460ff199081169091556000848152600260209081526040808320805490941660019081179094556003805480860182557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018890556001600160a01b038f1684529490915281204290559154610a6b91906110dc565b90507fca5143e2c7ab7a307bb0ab272f84668993c3e84052afaabec202679b7867a3dd81848c8c8a8a8a604051610aa897969594939291906110ef565b60405180910390a150505050505050505050565b60606003805480602002602001604051908101604052809291908181526020018280548015610b0a57602002820191906000526020600020905b815481526020019060010190808311610af6575b5050505050905090565b600060208284031215610b2657600080fd5b5035919050565b8681526000602060c08184015287518060c085015260005b81811015610b615789810183015185820160e001528201610b45565b50600060e0828601015260e0601f19601f83011685010192505050856040830152846060830152836080830152610b9c60a083018415159052565b979650505050505050565b80356001600160a01b0381168114610bbe57600080fd5b919050565b60008083601f840112610bd557600080fd5b50813567ffffffffffffffff811115610bed57600080fd5b602083019150836020828501011115610c0557600080fd5b9250929050565b60008060008060008060808789031215610c2557600080fd5b86359550610c3560208801610ba7565b9450604087013567ffffffffffffffff80821115610c5257600080fd5b610c5e8a838b01610bc3565b90965094506060890135915080821115610c7757600080fd5b50610c8489828a01610bc3565b979a9699509497509295939492505050565b600060208284031215610ca857600080fd5b610cb182610ba7565b9392505050565b600080600060608486031215610ccd57600080fd5b83359250610cdd60208501610ba7565b915060408401358015158114610cf257600080fd5b809150509250925092565b600080600080600080600060a0888a031215610d1857600080fd5b610d2188610ba7565b9650610d2f60208901610ba7565b9550604088013567ffffffffffffffff80821115610d4c57600080fd5b610d588b838c01610bc3565b909750955060608a0135915080821115610d7157600080fd5b50610d7e8a828b01610bc3565b989b979a50959894979596608090950135949350505050565b6020808252825182820181905260009190848201906040850190845b81811015610dcf57835183529284019291840191600101610db3565b50909695505050505050565b600181811c90821680610def57607f821691505b602082108103610e0f57634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260199082015278141c9bdc1bdcd85b08185b1c9958591e48195e1958dd5d1959603a1b604082015260600190565b600060208284031215610e5a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610e8e57610e8e610e61565b92915050565b600082610eb157634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610e8e57610e8e610e61565b6bffffffffffffffffffffffff198760601b1681528486601483013760008582016014810160008152858782375060149401938401929092525050603401949350505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8581526001600160a01b0385166020820152608060408201819052600090610f739083018587610f1f565b905082151560608301529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610faf57610faf610e61565b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f82111561101657600081815260208120601f850160051c81016020861015610ff35750805b601f850160051c820191505b8181101561101257828155600101610fff565b5050505b505050565b67ffffffffffffffff83111561103357611033610fb6565b611047836110418354610ddb565b83610fcc565b6000601f84116001811461107b57600085156110635750838201355b600019600387901b1c1916600186901b1783556110d5565b600083815260209020601f19861690835b828110156110ac578685013582556020948501946001909201910161108c565b50868210156110c95760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b81810381811115610e8e57610e8e610e61565b878152602081018790526001600160a01b0386811660408301528516606082015260c0608082018190526000906111299083018587610f1f565b90508260a08301529897505050505050505056fea26469706673582212209bbd438a53037a676e5a0afcd67151c7c099120f804d8c218cf8137ead03d6bd64736f6c63430008140033";

type ProposalManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProposalManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProposalManager__factory extends ContractFactory {
  constructor(...args: ProposalManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(tokenAddress, overrides || {});
  }
  override deploy(
    tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(tokenAddress, overrides || {}) as Promise<
      ProposalManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProposalManager__factory {
    return super.connect(runner) as ProposalManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProposalManagerInterface {
    return new Interface(_abi) as ProposalManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProposalManager {
    return new Contract(address, _abi, runner) as unknown as ProposalManager;
  }
}
