/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProposalManager,
  ProposalManagerInterface,
} from "../../contracts/ProposalManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "proposalHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "proposalHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "proposalHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "support",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votingPower",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "existingProposals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalHashes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "totalVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastProposalTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "bytes32",
        name: "actionHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "votesFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesAgainst",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract TokenUF",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "support",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526206978060055534801561001757600080fd5b5060405161123e38038061123e8339810160408190526100369161005b565b600080546001600160a01b0319166001600160a01b039290921691909117905561008b565b60006020828403121561006d57600080fd5b81516001600160a01b038116811461008457600080fd5b9392505050565b6111a48061009a6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063863ce2fc11610071578063863ce2fc146101375780639a0e7d661461014a578063bb971d6714610152578063cbc0e75b14610185578063d808cf6214610198578063fc0c546a146101ad57600080fd5b8063055c99db146100ae57806332ed5b12146100ca578063460c20d0146100ef5780635b7ad57814610104578063730ad45414610124575b600080fd5b6100b760055481565b6040519081526020015b60405180910390f35b6100dd6100d8366004610b78565b6101d8565b6040516100c196959493929190610b91565b6101026100fd366004610c70565b610298565b005b6100b7610112366004610cfa565b60046020526000908152604090205481565b610102610132366004610d1c565b610602565b6100b7610145366004610b78565b610836565b6100b7610857565b610175610160366004610b78565b60026020526000908152604090205460ff1681565b60405190151581526020016100c1565b610102610193366004610d61565b6108d0565b6101a0610b20565b6040516100c19190610dfb565b6000546101c0906001600160a01b031681565b6040516001600160a01b0390911681526020016100c1565b6001602081905260009182526040909120805491810180546101f990610e3f565b80601f016020809104026020016040519081016040528092919081815260200182805461022590610e3f565b80156102725780601f1061024757610100808354040283529160200191610272565b820191906000526020600020905b81548152906001019060200180831161025557829003601f168201915b505050506002830154600384015460048501546005909501549394919390925060ff1686565b6000868152600160205260409020600581015460ff16156102fc5760405162461bcd60e51b8152602060048201526019602482015278141c9bdc1bdcd85b08185b1c9958591e48195e1958dd5d1959603a1b60448201526064015b60405180910390fd5b600054604080516318160ddd60e01b815290516064926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190610e79565b61037590600a610ea8565b61037f9190610ec5565b816003015482600201546103939190610ee7565b10156103d45760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f75676820766f74657360801b60448201526064016102f3565b80600301548160020154116104235760405162461bcd60e51b815260206004820152601560248201527450726f706f73616c20646964206e6f74207061737360581b60448201526064016102f3565b80600401544210156104775760405162461bcd60e51b815260206004820152601b60248201527f566f74696e6720706572696f6420686173206e6f7420656e646564000000000060448201526064016102f3565b80546004820154604051610497918991879187918b918b91602001610efa565b60405160208183030381529060405280519060200120146104fa5760405162461bcd60e51b815260206004820152601c60248201527f496e76616c696420657865637574696f6e20706172616d65746572730000000060448201526064016102f3565b6000866001600160a01b03168484604051610516929190610f40565b6000604051808303816000865af19150503d8060008114610553576040519150601f19603f3d011682016040523d82523d6000602084013e610558565b606091505b50509050806105a95760405162461bcd60e51b815260206004820152601960248201527f46756e6374696f6e20657865637574696f6e206661696c65640000000000000060448201526064016102f3565b60058201805460ff191660011790556040517f95775ac0d9aa106cab8a34fc9d9c4c659e68021124d953c990d19c1140a0cea8906105f0908a908a908a908a908790610f79565b60405180910390a15050505050505050565b6000838152600160205260409020600581015460ff16156106615760405162461bcd60e51b8152602060048201526019602482015278141c9bdc1bdcd85b08185b1c9958591e48195e1958dd5d1959603a1b60448201526064016102f3565b806004015442106106b45760405162461bcd60e51b815260206004820152601760248201527f566f74696e6720706572696f642068617320656e64656400000000000000000060448201526064016102f3565b6001600160a01b038316600090815260068201602052604090205460ff161561070f5760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b60448201526064016102f3565b600080546040516370a0823160e01b81526001600160a01b038681166004830152909116906370a0823190602401602060405180830381865afa15801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e9190610e79565b905082156107a5578082600201600082825461079a9190610ee7565b909155506107bf9050565b808260030160008282546107b99190610ee7565b90915550505b6001600160a01b0384166000818152600684016020908152604091829020805460ff1916600117905581518881529081019290925284151590820152606081018290527f9bc1d007e9f894b0900fab4b7e20029267e704c85851e5470c30a1e1b239e0909060800160405180910390a15050505050565b6003818154811061084657600080fd5b600091825260209091200154905081565b6000805b6003548110156108cc5760006003828154811061087a5761087a610fb8565b60009182526020808320909101548083526001909152604090912060038101546002909101549192506108ac91610ee7565b6108b69084610ee7565b92505080806108c490610fce565b91505061085b565b5090565b4281116109125760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420646561646c696e6560801b60448201526064016102f3565b6005546001600160a01b0388166000908152600460205260409020546109389190610ee7565b4210156109935760405162461bcd60e51b815260206004820152602360248201527f57616974206265666f7265206372656174696e672061206e65772070726f706f6044820152621cd85b60ea1b60648201526084016102f3565b60008686868686866040516020016109b096959493929190610efa565b60408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff1615610a285760405162461bcd60e51b815260206004820152601760248201527f50726f706f73616c20616c72656164792065786973747300000000000000000060448201526064016102f3565b6000818152600160208190526040909120828155908101610a4a85878361104c565b50600480820184905560058201805460ff199081169091556000848152600260209081526040808320805490941660019081179094556003805480860182557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018890556001600160a01b038f1684529490915281204290559154610acf919061110d565b90507fca5143e2c7ab7a307bb0ab272f84668993c3e84052afaabec202679b7867a3dd81848c8c8a8a8a604051610b0c9796959493929190611120565b60405180910390a150505050505050505050565b60606003805480602002602001604051908101604052809291908181526020018280548015610b6e57602002820191906000526020600020905b815481526020019060010190808311610b5a575b5050505050905090565b600060208284031215610b8a57600080fd5b5035919050565b8681526000602060c08184015287518060c085015260005b81811015610bc55789810183015185820160e001528201610ba9565b50600060e0828601015260e0601f19601f83011685010192505050856040830152846060830152836080830152610c0060a083018415159052565b979650505050505050565b80356001600160a01b0381168114610c2257600080fd5b919050565b60008083601f840112610c3957600080fd5b50813567ffffffffffffffff811115610c5157600080fd5b602083019150836020828501011115610c6957600080fd5b9250929050565b60008060008060008060808789031215610c8957600080fd5b86359550610c9960208801610c0b565b9450604087013567ffffffffffffffff80821115610cb657600080fd5b610cc28a838b01610c27565b90965094506060890135915080821115610cdb57600080fd5b50610ce889828a01610c27565b979a9699509497509295939492505050565b600060208284031215610d0c57600080fd5b610d1582610c0b565b9392505050565b600080600060608486031215610d3157600080fd5b83359250610d4160208501610c0b565b915060408401358015158114610d5657600080fd5b809150509250925092565b600080600080600080600060a0888a031215610d7c57600080fd5b610d8588610c0b565b9650610d9360208901610c0b565b9550604088013567ffffffffffffffff80821115610db057600080fd5b610dbc8b838c01610c27565b909750955060608a0135915080821115610dd557600080fd5b50610de28a828b01610c27565b989b979a50959894979596608090950135949350505050565b6020808252825182820181905260009190848201906040850190845b81811015610e3357835183529284019291840191600101610e17565b50909695505050505050565b600181811c90821680610e5357607f821691505b602082108103610e7357634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610e8b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610ebf57610ebf610e92565b92915050565b600082610ee257634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610ebf57610ebf610e92565b6bffffffffffffffffffffffff198760601b1681528486601483013760008582016014810160008152858782375060149401938401929092525050603401949350505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8581526001600160a01b0385166020820152608060408201819052600090610fa49083018587610f50565b905082151560608301529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610fe057610fe0610e92565b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f82111561104757600081815260208120601f850160051c810160208610156110245750805b601f850160051c820191505b8181101561104357828155600101611030565b5050505b505050565b67ffffffffffffffff83111561106457611064610fe7565b611078836110728354610e3f565b83610ffd565b6000601f8411600181146110ac57600085156110945750838201355b600019600387901b1c1916600186901b178355611106565b600083815260209020601f19861690835b828110156110dd57868501358255602094850194600190920191016110bd565b50868210156110fa5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b81810381811115610ebf57610ebf610e92565b878152602081018790526001600160a01b0386811660408301528516606082015260c06080820181905260009061115a9083018587610f50565b90508260a08301529897505050505050505056fea26469706673582212200623119efd8c81ca8a746398d04ba66e5a06643c96616950e0fd0e3300ed02a364736f6c63430008140033";

type ProposalManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProposalManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProposalManager__factory extends ContractFactory {
  constructor(...args: ProposalManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(tokenAddress, overrides || {});
  }
  override deploy(
    tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(tokenAddress, overrides || {}) as Promise<
      ProposalManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProposalManager__factory {
    return super.connect(runner) as ProposalManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProposalManagerInterface {
    return new Interface(_abi) as ProposalManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProposalManager {
    return new Contract(address, _abi, runner) as unknown as ProposalManager;
  }
}
