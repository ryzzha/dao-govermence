/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [],
    name: "REWARD_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getStakingInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a5b380380610a5b83398101604081905261002f9161012b565b338061005657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61005f816100db565b506001600160a01b0381166100b65760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e20616464726573730000000000000000000000604482015260640161004d565b600180546001600160a01b0319166001600160a01b039290921691909117905561015b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561013d57600080fd5b81516001600160a01b038116811461015457600080fd5b9392505050565b6108f18061016a6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637b0472f0116100665780637b0472f01461013f5780638da5cb5b14610152578063aa4704f314610177578063f2fde38b146101b4578063fc0c546a146101c757600080fd5b806316934fc4146100a35780632def6620146101045780635997bb371461010e57806364ab867514610124578063715018a614610137575b600080fd5b6100dd6100b13660046107cc565b600260208190526000918252604090912080546001820154928201546003909201549092919060ff1684565b60408051948552602085019390935291830152151560608201526080015b60405180910390f35b61010c6101da565b005b610116600a81565b6040519081526020016100fb565b6101166101323660046107cc565b6103c7565b61010c610471565b61010c61014d3660046107fc565b610485565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100fb565b61018a6101853660046107cc565b610699565b6040805195865260208601949094529284019190915260608301521515608082015260a0016100fb565b61010c6101c23660046107cc565b610711565b60015461015f906001600160a01b031681565b3360009081526002602052604090206003015460ff1615156001146102385760405162461bcd60e51b815260206004820152600f60248201526e4e6f20616374697665207374616b6560881b60448201526064015b60405180910390fd5b3360009081526002602081905260409091209081015460019091015461025e9190610834565b4210156102ad5760405162461bcd60e51b815260206004820152601760248201527f5374616b696e6720706572696f64206e6f74206f766572000000000000000000604482015260640161022f565b33600081815260026020526040812054916102c7906103c7565b33600081815260026020819052604082208281556001808201849055918101929092556003909101805460ff19169055549192506001600160a01b039091169063a9059cbb906103178486610834565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610362573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610386919061084d565b50604080518381526020810183905233917f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e91015b60405180910390a25050565b6001600160a01b03811660009081526002602052604081206003015460ff166103f257506000919050565b6001600160a01b038216600090815260026020526040812060010154610418904261086f565b6001600160a01b0384166000908152600260205260408120549192509060649061044490600a90610882565b61044e9190610899565b90506301e1338061045f8383610882565b6104699190610899565b949350505050565b61047961074f565b610483600061077c565b565b600082116104d55760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161022f565b3360009081526002602052604090206003015460ff161561052a5760405162461bcd60e51b815260206004820152600f60248201526e416c7265616479207374616b696e6760881b604482015260640161022f565b62278d008110156105895760405162461bcd60e51b815260206004820152602360248201527f4d696e696d756d207374616b696e67206475726174696f6e206973203330206460448201526261797360e81b606482015260840161022f565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610604919061084d565b506040805160808101825283815242602080830191825282840185815260016060850181815233600081815260028087529089902097518855955192870192909255915193850193909355516003909301805460ff1916931515939093179092558251858152918201849052917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee9091016103bb565b6001600160a01b03811660009081526002602081815260408084208151608081018352815480825260018301549482018590529482015492810183905260039091015460ff161515606082015284938493849384939291906106fa8a6103c7565b606090940151929a91995097509195509350915050565b61071961074f565b6001600160a01b03811661074357604051631e4fbdf760e01b81526000600482015260240161022f565b61074c8161077c565b50565b6000546001600160a01b031633146104835760405163118cdaa760e01b815233600482015260240161022f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156107de57600080fd5b81356001600160a01b03811681146107f557600080fd5b9392505050565b6000806040838503121561080f57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b808201808211156108475761084761081e565b92915050565b60006020828403121561085f57600080fd5b815180151581146107f557600080fd5b818103818111156108475761084761081e565b80820281158282048414176108475761084761081e565b6000826108b657634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220d4641be67c7eff3b9f47a0b27b3f0ca0ffbdb22f9c0350df4b9934707ae9727b64736f6c63430008140033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(tokenAddress, overrides || {});
  }
  override deploy(
    tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(tokenAddress, overrides || {}) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
