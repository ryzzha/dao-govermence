/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Campaign,
  CampaignInterface,
} from "../../../contracts/Crowdfunding.sol/Campaign";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_organizer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_image",
        type: "string",
      },
      {
        internalType: "string",
        name: "_category",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_goal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "contract TokenUF",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "donator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "currency",
        type: "string",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "Withdrawed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "addSupportedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allowOtherTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donateETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "donateUF",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ethDonators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDetails",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "donator",
        type: "address",
      },
    ],
    name: "getDonationETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "donator",
        type: "address",
      },
    ],
    name: "getDonationUF",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parent",
    outputs: [
      {
        internalType: "contract Crowdfunding",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract TokenUF",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenDonators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161218238038061218283398181016040528101906100329190610511565b87600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c919061065a565b60405180910390fd5b6100b48161020660201b60201c565b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860038190555087600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550866005908161014d919061088c565b50856006908161015d919061088c565b50846007908161016d919061088c565b50836008908161017d919061088c565b508260098190555081600a8190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600b819055506000600c819055506000600d60006101000a81548160ff02191690831515021790555050505050505050505061095e565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6102f1816102de565b81146102fc57600080fd5b50565b60008151905061030e816102e8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061033f82610314565b9050919050565b61034f81610334565b811461035a57600080fd5b50565b60008151905061036c81610346565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103c58261037c565b810181811067ffffffffffffffff821117156103e4576103e361038d565b5b80604052505050565b60006103f76102ca565b905061040382826103bc565b919050565b600067ffffffffffffffff8211156104235761042261038d565b5b61042c8261037c565b9050602081019050919050565b60005b8381101561045757808201518184015260208101905061043c565b60008484015250505050565b600061047661047184610408565b6103ed565b90508281526020810184848401111561049257610491610377565b5b61049d848285610439565b509392505050565b600082601f8301126104ba576104b9610372565b5b81516104ca848260208601610463565b91505092915050565b60006104de82610334565b9050919050565b6104ee816104d3565b81146104f957600080fd5b50565b60008151905061050b816104e5565b92915050565b60008060008060008060008060006101208a8c031215610534576105336102d4565b5b60006105428c828d016102ff565b99505060206105538c828d0161035d565b98505060408a015167ffffffffffffffff811115610574576105736102d9565b5b6105808c828d016104a5565b97505060608a015167ffffffffffffffff8111156105a1576105a06102d9565b5b6105ad8c828d016104a5565b96505060808a015167ffffffffffffffff8111156105ce576105cd6102d9565b5b6105da8c828d016104a5565b95505060a08a015167ffffffffffffffff8111156105fb576105fa6102d9565b5b6106078c828d016104a5565b94505060c06106188c828d016102ff565b93505060e06106298c828d016102ff565b92505061010061063b8c828d016104fc565b9150509295985092959850929598565b61065481610334565b82525050565b600060208201905061066f600083018461064b565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106c757607f821691505b6020821081036106da576106d9610680565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107427fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610705565b61074c8683610705565b95508019841693508086168417925050509392505050565b6000819050919050565b600061078961078461077f846102de565b610764565b6102de565b9050919050565b6000819050919050565b6107a38361076e565b6107b76107af82610790565b848454610712565b825550505050565b600090565b6107cc6107bf565b6107d781848461079a565b505050565b5b818110156107fb576107f06000826107c4565b6001810190506107dd565b5050565b601f82111561084057610811816106e0565b61081a846106f5565b81016020851015610829578190505b61083d610835856106f5565b8301826107dc565b50505b505050565b600082821c905092915050565b600061086360001984600802610845565b1980831691505092915050565b600061087c8383610852565b9150826002028217905092915050565b61089582610675565b67ffffffffffffffff8111156108ae576108ad61038d565b5b6108b882546106af565b6108c38282856107ff565b600060209050601f8311600181146108f657600084156108e4578287015190505b6108ee8582610870565b865550610956565b601f198416610904866106e0565b60005b8281101561092c57848901518255600182019150602085019450602081019050610907565b868310156109495784890151610945601f891682610852565b8355505b6001600288020188555050505b505050505050565b6118158061096d6000396000f3fe6080604052600436106100e85760003560e01c80639c39124b1161008a578063d4a9e8ab11610059578063d4a9e8ab146102c8578063f2fde38b14610305578063fbbf93a01461032e578063fc0c546a14610363576100e8565b80639c39124b14610207578063b332ba6e14610244578063b9cff6d414610281578063c4e5990f146102ac576100e8565b80636d69fcaf116100c65780636d69fcaf14610192578063715018a6146101bb5780638b4c40b0146101d25780638da5cb5b146101dc576100e8565b80632ef640ae146100ed57806360f96a8f1461012a57806368c4ac2614610155575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190610f0f565b61038e565b6040516101219190610f55565b60405180910390f35b34801561013657600080fd5b5061013f6103d7565b60405161014c9190610fcf565b60405180910390f35b34801561016157600080fd5b5061017c60048036038101906101779190610f0f565b6103fd565b6040516101899190611005565b60405180910390f35b34801561019e57600080fd5b506101b960048036038101906101b49190610f0f565b61041d565b005b3480156101c757600080fd5b506101d06104cf565b005b6101da6104e3565b005b3480156101e857600080fd5b506101f1610629565b6040516101fe919061102f565b60405180910390f35b34801561021357600080fd5b5061022e60048036038101906102299190610f0f565b610652565b60405161023b9190610f55565b60405180910390f35b34801561025057600080fd5b5061026b60048036038101906102669190610f0f565b61069b565b6040516102789190610f55565b60405180910390f35b34801561028d57600080fd5b506102966106b3565b6040516102a39190611005565b60405180910390f35b6102c660048036038101906102c191906110e5565b6106c6565b005b3480156102d457600080fd5b506102ef60048036038101906102ea9190610f0f565b6109e7565b6040516102fc9190610f55565b60405180910390f35b34801561031157600080fd5b5061032c60048036038101906103279190610f0f565b6109ff565b005b34801561033a57600080fd5b50610343610a85565b60405161035a9b9a999897969594939291906111f0565b60405180910390f35b34801561036f57600080fd5b50610378610d33565b60405161038591906112d8565b60405180910390f35b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60116020528060005260406000206000915054906101000a900460ff1681565b610425610d59565b601060009054906101000a900460ff16610474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046b9061133f565b60405180910390fd5b6001601160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6104d7610d59565b6104e16000610de0565b565b600a544210610527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051e906113ab565b60405180910390fd5b6000341161056a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056190611417565b60405180910390fd5b34600b600082825461057c9190611466565b9250508190555034600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105d29190611466565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167ffa5658cbb5d60363acba0d281bddcf21cc9e7ea6053267531b4cdc36d5df7a8a3460405161061f91906114e6565b60405180910390a2565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600e6020528060005260406000206000915090505481565b601060009054906101000a900460ff1681565b600a54421061070a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610701906113ab565b60405180910390fd5b84600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610766919061102f565b602060405180830381865afa158015610783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a79190611529565b116107e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107de906115c8565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf333088888888886040518863ffffffff1660e01b815260040161084e9796959493929190611606565b600060405180830381600087803b15801561086857600080fd5b505af115801561087c573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016108df93929190611675565b6020604051808303816000875af11580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092291906116d8565b5084600c60008282546109359190611466565b9250508190555084600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461098b9190611466565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167ffa5658cbb5d60363acba0d281bddcf21cc9e7ea6053267531b4cdc36d5df7a8a346040516109d89190611751565b60405180910390a25050505050565b600f6020528060005260406000206000915090505481565b610a07610d59565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a795760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a70919061102f565b60405180910390fd5b610a8281610de0565b50565b6000806060806060806000806000806000600354600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005600660076008600954600a54600b54600c54600d60009054906101000a900460ff16888054610aec906117ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610b18906117ae565b8015610b655780601f10610b3a57610100808354040283529160200191610b65565b820191906000526020600020905b815481529060010190602001808311610b4857829003601f168201915b50505050509850878054610b78906117ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba4906117ae565b8015610bf15780601f10610bc657610100808354040283529160200191610bf1565b820191906000526020600020905b815481529060010190602001808311610bd457829003601f168201915b50505050509750868054610c04906117ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610c30906117ae565b8015610c7d5780601f10610c5257610100808354040283529160200191610c7d565b820191906000526020600020905b815481529060010190602001808311610c6057829003601f168201915b50505050509650858054610c90906117ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610cbc906117ae565b8015610d095780601f10610cde57610100808354040283529160200191610d09565b820191906000526020600020905b815481529060010190602001808311610cec57829003601f168201915b505050505095509a509a509a509a509a509a509a509a509a509a509a50909192939495969798999a565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d61610ea4565b73ffffffffffffffffffffffffffffffffffffffff16610d7f610629565b73ffffffffffffffffffffffffffffffffffffffff1614610dde57610da2610ea4565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dd5919061102f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610edc82610eb1565b9050919050565b610eec81610ed1565b8114610ef757600080fd5b50565b600081359050610f0981610ee3565b92915050565b600060208284031215610f2557610f24610eac565b5b6000610f3384828501610efa565b91505092915050565b6000819050919050565b610f4f81610f3c565b82525050565b6000602082019050610f6a6000830184610f46565b92915050565b6000819050919050565b6000610f95610f90610f8b84610eb1565b610f70565b610eb1565b9050919050565b6000610fa782610f7a565b9050919050565b6000610fb982610f9c565b9050919050565b610fc981610fae565b82525050565b6000602082019050610fe46000830184610fc0565b92915050565b60008115159050919050565b610fff81610fea565b82525050565b600060208201905061101a6000830184610ff6565b92915050565b61102981610ed1565b82525050565b60006020820190506110446000830184611020565b92915050565b61105381610f3c565b811461105e57600080fd5b50565b6000813590506110708161104a565b92915050565b600060ff82169050919050565b61108c81611076565b811461109757600080fd5b50565b6000813590506110a981611083565b92915050565b6000819050919050565b6110c2816110af565b81146110cd57600080fd5b50565b6000813590506110df816110b9565b92915050565b600080600080600060a0868803121561110157611100610eac565b5b600061110f88828901611061565b955050602061112088828901611061565b94505060406111318882890161109a565b9350506060611142888289016110d0565b9250506080611153888289016110d0565b9150509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b8381101561119a57808201518184015260208101905061117f565b60008484015250505050565b6000601f19601f8301169050919050565b60006111c282611160565b6111cc818561116b565b93506111dc81856020860161117c565b6111e5816111a6565b840191505092915050565b600061016082019050611206600083018e610f46565b611213602083018d611020565b8181036040830152611225818c6111b7565b90508181036060830152611239818b6111b7565b9050818103608083015261124d818a6111b7565b905081810360a083015261126181896111b7565b905061127060c0830188610f46565b61127d60e0830187610f46565b61128b610100830186610f46565b611299610120830185610f46565b6112a7610140830184610ff6565b9c9b505050505050505050505050565b60006112c282610f9c565b9050919050565b6112d2816112b7565b82525050565b60006020820190506112ed60008301846112c9565b92915050565b7f416464696e6720746f6b656e73206973206e6f7420616c6c6f7765642e000000600082015250565b6000611329601d8361116b565b9150611334826112f3565b602082019050919050565b600060208201905081810360008301526113588161131c565b9050919050565b7f43616d706169676e20656e6465642e0000000000000000000000000000000000600082015250565b6000611395600f8361116b565b91506113a08261135f565b602082019050919050565b600060208201905081810360008301526113c481611388565b9050919050565b7f446f6e6174696f6e206d7573742062652067726561746572207468616e20302e600082015250565b600061140160208361116b565b915061140c826113cb565b602082019050919050565b60006020820190508181036000830152611430816113f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061147182610f3c565b915061147c83610f3c565b925082820190508082111561149457611493611437565b5b92915050565b7f4554480000000000000000000000000000000000000000000000000000000000600082015250565b60006114d060038361116b565b91506114db8261149a565b602082019050919050565b60006040820190506114fb6000830184610f46565b818103602083015261150c816114c3565b905092915050565b6000815190506115238161104a565b92915050565b60006020828403121561153f5761153e610eac565b5b600061154d84828501611514565b91505092915050565b7f446f6e6174696f6e206d7573742062652067726561746572207468616e20736560008201527f6e6465722062616c616e63652e00000000000000000000000000000000000000602082015250565b60006115b2602d8361116b565b91506115bd82611556565b604082019050919050565b600060208201905081810360008301526115e1816115a5565b9050919050565b6115f181611076565b82525050565b611600816110af565b82525050565b600060e08201905061161b600083018a611020565b6116286020830189611020565b6116356040830188610f46565b6116426060830187610f46565b61164f60808301866115e8565b61165c60a08301856115f7565b61166960c08301846115f7565b98975050505050505050565b600060608201905061168a6000830186611020565b6116976020830185611020565b6116a46040830184610f46565b949350505050565b6116b581610fea565b81146116c057600080fd5b50565b6000815190506116d2816116ac565b92915050565b6000602082840312156116ee576116ed610eac565b5b60006116fc848285016116c3565b91505092915050565b7f5546000000000000000000000000000000000000000000000000000000000000600082015250565b600061173b60028361116b565b915061174682611705565b602082019050919050565b60006040820190506117666000830184610f46565b81810360208301526117778161172e565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117c657607f821691505b6020821081036117d9576117d861177f565b5b5091905056fea2646970667358221220fc72d08bc542c2f161d2f3f6d621ef35810bb41a262791c4f0abe4911980a37a64736f6c634300081c0033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _id: BigNumberish,
    _organizer: AddressLike,
    _title: string,
    _description: string,
    _image: string,
    _category: string,
    _goal: BigNumberish,
    _deadline: BigNumberish,
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _id,
      _organizer,
      _title,
      _description,
      _image,
      _category,
      _goal,
      _deadline,
      _tokenAddress,
      overrides || {}
    );
  }
  override deploy(
    _id: BigNumberish,
    _organizer: AddressLike,
    _title: string,
    _description: string,
    _image: string,
    _category: string,
    _goal: BigNumberish,
    _deadline: BigNumberish,
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _id,
      _organizer,
      _title,
      _description,
      _image,
      _category,
      _goal,
      _deadline,
      _tokenAddress,
      overrides || {}
    ) as Promise<
      Campaign & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Campaign__factory {
    return super.connect(runner) as Campaign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new Interface(_abi) as CampaignInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Campaign {
    return new Contract(address, _abi, runner) as unknown as Campaign;
  }
}
