/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  GovernanceUF,
  GovernanceUFInterface,
} from "../../../contracts/Governance.sol/GovernanceUF";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "support",
        type: "bool",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "votesFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesAgainst",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "support",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516117f93803806117f983398181016040528101906100329190610223565b30600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c919061025f565b60405180910390fd5b6100b4816100fc60201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061027a565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f0826101c5565b9050919050565b610200816101e5565b811461020b57600080fd5b50565b60008151905061021d816101f7565b92915050565b600060208284031215610239576102386101c0565b5b60006102478482850161020e565b91505092915050565b610259816101e5565b82525050565b60006020820190506102746000830184610250565b92915050565b611570806102896000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101345780638da5cb5b1461013e578063c9d27afe1461015c578063f2fde38b14610178578063fc0c546a1461019457610093565b8063013cf08b146100985780630d61b519146100cc57806343859632146100e857806349c2a1a614610118575b600080fd5b6100b260048036038101906100ad9190610a26565b6101b2565b6040516100c3959493929190610b0d565b60405180910390f35b6100e660048036038101906100e19190610a26565b61027d565b005b61010260048036038101906100fd9190610bc5565b61038d565b60405161010f9190610c05565b60405180910390f35b610132600480360381019061012d9190610d55565b6103bc565b005b61013c6104b8565b005b6101466104cc565b6040516101539190610dad565b60405180910390f35b61017660048036038101906101719190610df4565b6104f5565b005b610192600480360381019061018d9190610e34565b6107dd565b005b61019c610863565b6040516101a99190610ec0565b60405180910390f35b60036020528060005260406000206000915090508060000180546101d590610f0a565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610f0a565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b610285610889565b600060036000838152602001908152602001600020905080600301544210156102e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102da90610f87565b60405180910390fd5b8060040160009054906101000a900460ff1615610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032c90610ff3565b60405180910390fd5b60018160040160006101000a81548160ff0219169083151502179055507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f826040516103819190611013565b60405180910390a15050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600260008154809291906103cf9061105d565b91905055506040518060a0016040528082815260200160008152602001600081526020016203f4804261040291906110a5565b8152602001600015158152506003600060025481526020019081526020016000206000820151816000019081610438919061127b565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050507f9c770c289ab5bf7e57cb1d23c8ceae993aea46eb64847072fd3d78ca60d3e432600254826040516104ad92919061134d565b60405180910390a150565b6104c0610889565b6104ca6000610910565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6003600083815260200190815260200160002060030154421061054d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610544906113c9565b60405180910390fd5b6004600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156105eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e290611435565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106489190610dad565b602060405180830381865afa158015610665573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610689919061146a565b9050600081116106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c5906114e3565b60405180910390fd5b811561070657806003600085815260200190815260200160002060010160008282546106fa91906110a5565b92505081905550610734565b8060036000858152602001908152602001600020600201600082825461072c91906110a5565b925050819055505b60016004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507ff2913dbe661ee2acc4a046d8fbcdc792373bda34c41c6086484b5345e5785e5f8333846040516107d093929190611503565b60405180910390a1505050565b6107e5610889565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108575760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161084e9190610dad565b60405180910390fd5b61086081610910565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108916109d4565b73ffffffffffffffffffffffffffffffffffffffff166108af6104cc565b73ffffffffffffffffffffffffffffffffffffffff161461090e576108d26109d4565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109059190610dad565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610a03816109f0565b8114610a0e57600080fd5b50565b600081359050610a20816109fa565b92915050565b600060208284031215610a3c57610a3b6109e6565b5b6000610a4a84828501610a11565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a8d578082015181840152602081019050610a72565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ab582610a53565b610abf8185610a5e565b9350610acf818560208601610a6f565b610ad881610a99565b840191505092915050565b610aec816109f0565b82525050565b60008115159050919050565b610b0781610af2565b82525050565b600060a0820190508181036000830152610b278188610aaa565b9050610b366020830187610ae3565b610b436040830186610ae3565b610b506060830185610ae3565b610b5d6080830184610afe565b9695505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b9282610b67565b9050919050565b610ba281610b87565b8114610bad57600080fd5b50565b600081359050610bbf81610b99565b92915050565b60008060408385031215610bdc57610bdb6109e6565b5b6000610bea85828601610a11565b9250506020610bfb85828601610bb0565b9150509250929050565b6000602082019050610c1a6000830184610afe565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c6282610a99565b810181811067ffffffffffffffff82111715610c8157610c80610c2a565b5b80604052505050565b6000610c946109dc565b9050610ca08282610c59565b919050565b600067ffffffffffffffff821115610cc057610cbf610c2a565b5b610cc982610a99565b9050602081019050919050565b82818337600083830152505050565b6000610cf8610cf384610ca5565b610c8a565b905082815260208101848484011115610d1457610d13610c25565b5b610d1f848285610cd6565b509392505050565b600082601f830112610d3c57610d3b610c20565b5b8135610d4c848260208601610ce5565b91505092915050565b600060208284031215610d6b57610d6a6109e6565b5b600082013567ffffffffffffffff811115610d8957610d886109eb565b5b610d9584828501610d27565b91505092915050565b610da781610b87565b82525050565b6000602082019050610dc26000830184610d9e565b92915050565b610dd181610af2565b8114610ddc57600080fd5b50565b600081359050610dee81610dc8565b92915050565b60008060408385031215610e0b57610e0a6109e6565b5b6000610e1985828601610a11565b9250506020610e2a85828601610ddf565b9150509250929050565b600060208284031215610e4a57610e496109e6565b5b6000610e5884828501610bb0565b91505092915050565b6000819050919050565b6000610e86610e81610e7c84610b67565b610e61565b610b67565b9050919050565b6000610e9882610e6b565b9050919050565b6000610eaa82610e8d565b9050919050565b610eba81610e9f565b82525050565b6000602082019050610ed56000830184610eb1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f2257607f821691505b602082108103610f3557610f34610edb565b5b50919050565b7f566f74696e67207374696c6c206f6e676f696e67000000000000000000000000600082015250565b6000610f71601483610a5e565b9150610f7c82610f3b565b602082019050919050565b60006020820190508181036000830152610fa081610f64565b9050919050565b7f416c726561647920657865637574656400000000000000000000000000000000600082015250565b6000610fdd601083610a5e565b9150610fe882610fa7565b602082019050919050565b6000602082019050818103600083015261100c81610fd0565b9050919050565b60006020820190506110286000830184610ae3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611068826109f0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361109a5761109961102e565b5b600182019050919050565b60006110b0826109f0565b91506110bb836109f0565b92508282019050808211156110d3576110d261102e565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261113b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826110fe565b61114586836110fe565b95508019841693508086168417925050509392505050565b600061117861117361116e846109f0565b610e61565b6109f0565b9050919050565b6000819050919050565b6111928361115d565b6111a661119e8261117f565b84845461110b565b825550505050565b600090565b6111bb6111ae565b6111c6818484611189565b505050565b5b818110156111ea576111df6000826111b3565b6001810190506111cc565b5050565b601f82111561122f57611200816110d9565b611209846110ee565b81016020851015611218578190505b61122c611224856110ee565b8301826111cb565b50505b505050565b600082821c905092915050565b600061125260001984600802611234565b1980831691505092915050565b600061126b8383611241565b9150826002028217905092915050565b61128482610a53565b67ffffffffffffffff81111561129d5761129c610c2a565b5b6112a78254610f0a565b6112b28282856111ee565b600060209050601f8311600181146112e557600084156112d3578287015190505b6112dd858261125f565b865550611345565b601f1984166112f3866110d9565b60005b8281101561131b578489015182556001820191506020850194506020810190506112f6565b868310156113385784890151611334601f891682611241565b8355505b6001600288020188555050505b505050505050565b60006040820190506113626000830185610ae3565b81810360208301526113748184610aaa565b90509392505050565b7f566f74696e6720656e6465640000000000000000000000000000000000000000600082015250565b60006113b3600c83610a5e565b91506113be8261137d565b602082019050919050565b600060208201905081810360008301526113e2816113a6565b9050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b600061141f600d83610a5e565b915061142a826113e9565b602082019050919050565b6000602082019050818103600083015261144e81611412565b9050919050565b600081519050611464816109fa565b92915050565b6000602082840312156114805761147f6109e6565b5b600061148e84828501611455565b91505092915050565b7f4e6f20746f6b656e7320746f20766f7465000000000000000000000000000000600082015250565b60006114cd601183610a5e565b91506114d882611497565b602082019050919050565b600060208201905081810360008301526114fc816114c0565b9050919050565b60006060820190506115186000830186610ae3565b6115256020830185610d9e565b6115326040830184610afe565b94935050505056fea2646970667358221220ce735f9243d0d8eb802b5d6e2de01e9c92a6f80e2b32f2055ab71af32e85099e64736f6c634300081c0033";

type GovernanceUFConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceUFConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceUF__factory extends ContractFactory {
  constructor(...args: GovernanceUFConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(tokenAddress, overrides || {});
  }
  override deploy(
    tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(tokenAddress, overrides || {}) as Promise<
      GovernanceUF & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GovernanceUF__factory {
    return super.connect(runner) as GovernanceUF__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceUFInterface {
    return new Interface(_abi) as GovernanceUFInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GovernanceUF {
    return new Contract(address, _abi, runner) as unknown as GovernanceUF;
  }
}
